<UserControl x:Class="IPCameraIndoorControlLibrary.Station.CalibNightVision.UI.ucRunAll"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IPCameraIndoorControlLibrary.Station.CalibNightVision.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="#ffffff">

    <UserControl.Resources>
        
        <!--label-->
        <Style TargetType="Label" x:Key="label_title">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0,20,0,0"/>
        </Style>
      
        <!--combobox-->
        <Style TargetType="ComboBox">
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderBrush" Value="#777777"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="Blue"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsEditable" Value="False"/>
            <EventSetter Event="PreviewMouseWheel" Handler="ComboBox_PreviewMouseWheel"/>
        </Style>

    </UserControl.Resources>

    <Grid Margin="10">

        <!--grid main-->
        <Grid Visibility="Visible" x:Name="grid_main">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200"/>
                    <ColumnDefinition Width="400"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Click="Button_Click" Tag="start_calib"  Grid.Column="0" FontSize="25" FontWeight="SemiBold" Content="{Binding Path=buttonContent, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=buttonContent}" Value="START">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=buttonContent}" Value="STOP">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <StackPanel Margin="10,0,10,0" Grid.Column="1">
                    <Border Height="30" BorderBrush="#999999" BorderThickness="0,0,0,0.7">
                        <StackPanel Orientation="Horizontal">
                            <Label FontSize="13" Width="200" Content="Số lượng sản phẩm / 1 lượt calib: "/>
                            <Label FontSize="13" FontWeight="SemiBold" Content="{Binding Path=cameraQuantity, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Border>
                    <Border Height="30" BorderBrush="#999999" BorderThickness="0,0,0,0.7">
                        <StackPanel Orientation="Horizontal">
                            <Label FontSize="13" Width="200" Content="Thời gian thực hiện: "/>
                            <Label FontSize="13" FontWeight="SemiBold" Content="{Binding Path=totalTime, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </Border>

                </StackPanel>

                <StackPanel Margin="10,0,0,0" HorizontalAlignment="Left" Grid.Column="2">
                    <Label HorizontalAlignment="Left" Content="Total result:"/>
                    <Label HorizontalAlignment="Left" Margin="0,-15,0,0" FontSize="40" FontWeight="SemiBold" Content="{Binding Path=TotalResult, UpdateSourceTrigger=PropertyChanged}">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="-">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Waiting...">
                                        <Setter Property="Foreground" Value="Orange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                        <Setter Property="Foreground" Value="Lime"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1" Margin="0,2,0,2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <ProgressBar Maximum="4" Value="{Binding Path=progressIndex, UpdateSourceTrigger=PropertyChanged}" Background="White" Grid.ColumnSpan="4" >
                    <ProgressBar.Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="#b2e89e"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                    <Setter Property="Foreground" Value="#ffcaa1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ProgressBar.Style>
                </ProgressBar>
                <Label Opacity="0.5" FontWeight="SemiBold" Grid.Column="0" VerticalAlignment="Center" HorizontalContentAlignment="Center" Content="Change IP Address"/>
                <Label Opacity="0.5" FontWeight="SemiBold" Grid.Column="1" VerticalAlignment="Center" HorizontalContentAlignment="Center" Content="Calib High Threshold"/>
                <Label Opacity="0.5" FontWeight="SemiBold" Grid.Column="2" VerticalAlignment="Center" HorizontalContentAlignment="Center" Content="Calib Low Threshold"/>
                <Label Opacity="0.5" FontWeight="SemiBold" Grid.Column="3" VerticalAlignment="Center" HorizontalContentAlignment="Center" Content="Read Calib Value"/>

            </Grid>


            <DataGrid Margin="0,0,0,0" Grid.Row="2" x:Name="datagrid_calibnightvision" 
                                              Background="White"
                                              ItemsSource="{Binding}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                                              GridLinesVisibility="None"
                                              HeadersVisibility="Column"
                                              BorderBrush="#777777"
                                              BorderThickness="0.8"
                                              IsHitTestVisible="False"
                                              SelectionUnit="FullRow" SelectionMode="Extended"
                                              >

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Height" Value="40"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                        <Setter Property="BorderThickness" Value="0,0,0,1"/>
                        <Setter Property="Padding" Value="3,0,0,0"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>

                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background" Value="White"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Result}" Value="Waiting...">
                                <Setter Property="Background" Value="#fcf8c2"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                <Setter Property="Background" Value="#ffe0cc"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Result}" Value="Passed">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding macEthernet, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="   MAC ETHERNET" Width="*" FontSize="17" FontWeight="SemiBold"/>
                    <DataGridTextColumn Binding="{Binding ipAddress, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="IP ADDRESS" Width="*"/>
                    <DataGridTextColumn Binding="{Binding changeIPResult, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="CHANGE IP" Width="0.8*"/>
                    <DataGridTextColumn Binding="{Binding calibLightResult, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="CALIB LIGHT" Width="0.8*"/>
                    <DataGridTextColumn Binding="{Binding calibDarkResult, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="CALIB DARK" Width="0.8*"/>
                    <DataGridTextColumn Binding="{Binding verifyResult, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="READ CALIB" Width="*"/>
                    <DataGridTextColumn Binding="{Binding Result, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Header="RESULT" Width="0.8*"/>
                </DataGrid.Columns>

            </DataGrid>

            <GridSplitter Background="White" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="3"/>

            <Grid x:Name="grid_debug" Grid.Row="4"/>

        </Grid>

        <!--grid select camera quantity-->
        <Grid Visibility="Collapsed" x:Name="grid_cameraquantity">

            <StackPanel>
                <Label Style="{StaticResource label_title}" Content="Nhập số lượng sản phẩm:"/>
                <ComboBox x:Name="cbb_cameraquantity" Margin="0,10,0,0" Text="{Binding Path=cameraQuantity, UpdateSourceTrigger=PropertyChanged}" />
                <Button Tag="select_camera_quantity" Margin="0,10,0,0" HorizontalAlignment="Left" Content="Tiếp tục" Height="60" FontWeight="SemiBold" FontSize="25" Width="200" Click="Button_Click"/>
            </StackPanel>

        </Grid>

        <!--grid wait switch light-->
        <Grid Background="#fcf8c2" Visibility="Collapsed" x:Name="grid_waitlight">
            <StackPanel Margin="10" >
                <Label FontSize="25" FontWeight="SemiBold" Content="Vui lòng điều chỉnh cường độ ánh sáng trong buồng calib là:" Margin="-1,0,1,0"/>
                <Label Foreground="Blue" FontSize="100" FontWeight="SemiBold" Content="7 LUX" Margin="-1,0,1,0"/>
                <Label Foreground="Red" FontSize="25" FontWeight="SemiBold" Content="{Binding Path=totalTime, UpdateSourceTrigger=PropertyChanged}" Margin="-1,0,1,0"/>
                <Label FontSize="25" FontWeight="SemiBold" Content="Sau đó click nút 'Tiếp tục'." Margin="-1,10,1,0"/>
                <Button Tag="calib_light" Margin="0,30,0,0" HorizontalAlignment="Left" Content="Tiếp tục" Height="60" FontWeight="SemiBold" FontSize="25" Width="200" Click="Button_Click"/>
            </StackPanel>
        </Grid>
    
        <!--grid wait switch dark-->
        <Grid Background="#fcf8c2" Visibility="Collapsed" x:Name="grid_waitdark">
            <StackPanel Margin="10">
                <Label FontSize="25" FontWeight="SemiBold" Content="Vui lòng điều chỉnh cường độ ánh sáng trong buồng calib là:" Margin="-1,0,1,0"/>
                <Label Foreground="Blue" FontSize="100" FontWeight="SemiBold" Content="3 LUX" Margin="-1,0,1,0"/>
                <Label Foreground="Red" FontSize="25" FontWeight="SemiBold" Content="{Binding Path=totalTime, UpdateSourceTrigger=PropertyChanged}" Margin="-1,0,1,0"/>
                <Label FontSize="25" FontWeight="SemiBold" Content="Sau đó click nút 'Tiếp tục'." Margin="-1,10,1,0"/>
                <Button Tag="calib_dark" Margin="0,30,0,0" HorizontalAlignment="Left" Content="Tiếp tục" Height="60" FontWeight="SemiBold" FontSize="25" Width="200" Click="Button_Click"/>
            </StackPanel>
        </Grid>
        
    </Grid>
    
    
</UserControl>
