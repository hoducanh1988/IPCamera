<UserControl x:Class="IPCameraIndoorControlLibrary.Station.TestFunctionPcbaLayer2.UI.ucRunAll"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IPCameraIndoorControlLibrary.Station.TestFunctionPcbaLayer2.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="#ffffff">

    <Grid Margin="0,2,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="370"/>
        </Grid.ColumnDefinitions>

        <!--Content-->
        <Border Grid.Column="0" >
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Button Grid.Row="0" Click="Button_Click" Tag="runall"  Content="{Binding Path=buttonContent, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Margin" Value="0,5,0,0"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="Visibility" Value="Visible"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Border x:Name="_border" CornerRadius="5,5,5,5" BorderBrush="#BBBBBB" BorderThickness="1,5,1,3"/>
                                            <ContentPresenter x:Name="buttoncontent" Margin="20,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        </Grid>

                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=buttoncontent, Path=Content}" Value="START">
                                                <Setter Property="Opacity" Value="1"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding ElementName=buttoncontent, Path=Content}" Value="STOP">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>

                                            <Trigger Property="Button.IsMouseOver" Value="True">
                                                <Setter TargetName="_border" Property="Background" Value="#BBBBBB" />
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="FontSize" Value="40"/>
                                                <!--<Setter TargetName="_border" Property="Background">
                                                    <Setter.Value>
                                                        <RadialGradientBrush 
                                                            GradientOrigin="0,0.5"                 
                                                            Center="0,0.5">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStop Color="White" Offset="0.5" />
                                                                <GradientStop Color="#d1d1cf" Offset="1.0"/>
                                                            </RadialGradientBrush.GradientStops>

                                                        </RadialGradientBrush>
                                                    </Setter.Value>
                                                </Setter>-->
                                            </Trigger>

                                            <Trigger Property="Button.IsMouseOver" Value="False">
                                                <Setter TargetName="_border" Property="Background" Value="white" />
                                                <Setter Property="Foreground" Value="Black"/>
                                                <Setter Property="FontSize" Value="30"/>
                                            </Trigger>

                                            <Trigger Property="Button.IsPressed" Value="True">
                                                <!--<Setter Property="BitmapEffect">
                                                    <Setter.Value>
                                                        <DropShadowBitmapEffect ShadowDepth="0" Direction="270"/>
                                                    </Setter.Value>
                                                </Setter>-->
                                            </Trigger>

                                            <Trigger Property="Button.IsPressed" Value="False">
                                                <!--<Setter Property="BitmapEffect">
                                                    <Setter.Value>
                                                        <DropShadowBitmapEffect ShadowDepth="5" Direction="270"/>
                                                    </Setter.Value>
                                                </Setter>-->
                                            </Trigger>
                                        </ControlTemplate.Triggers>

                                    </ControlTemplate>

                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>


                <Border Margin="0,5,0,0" Grid.Row="1" BorderBrush="#777777" BorderThickness="0.75">
                    <Grid x:Name="grid_debug"/>
                </Border>

            </Grid>
        </Border>

        <GridSplitter BorderBrush="#777777" BorderThickness="1,0,1,0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

        <!--Result-->
        <Border Background="White" Grid.Column="2">
            <!--<Border.BitmapEffect>
                <DropShadowBitmapEffect ShadowDepth="5" Direction="270"/>
            </Border.BitmapEffect>-->

            <ScrollViewer Margin="0,5,5,5">
                <StackPanel Margin="5">
                    <Label FontSize="18" FontWeight="SemiBold" 
                           Content="Phán định tổng:"/>

                    <Label  Margin="0,-20,0,0" FontSize="70" Content="{Binding Path=TotalResult, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="-">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Waiting...">
                                        <Setter Property="Foreground" Value="Orange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                        <Setter Property="Foreground" Value="Lime"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Failed">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    
                    <WrapPanel>
                        <Label FontSize="15" Content="Mac Wlan: "/>
                        <Label FontSize="15" FontWeight="Bold" Content="{Binding Path=macWlan, UpdateSourceTrigger=PropertyChanged}">
                            <Label.Style>
                                <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                            <Setter Property="Foreground" Value="Lime"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="Waiting...">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=TotalResult}" Value="-">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </WrapPanel>
                    
                    <!--<TextBlock FontSize="15" Padding="5,0,0,0" Height="50" TextWrapping="Wrap" LineHeight="1" Text="{Binding Path=TestMessage, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="Red"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=TotalResult}" Value="Passed">
                                        <Setter Property="Foreground" Value="Lime"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>-->

                    <Label FontSize="18" FontWeight="SemiBold" 
                           Content="Kết quả của từng bài test:"/>

                    <!--Kiểm tra khối giao tiếp wifi-->
                    <Border Height="30" BorderBrush="#777777" BorderThickness="0,0.5,0,0.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCheckWifi}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsCheckWifi}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <WrapPanel>
                            <Label Padding="10,5,0,0" FontSize="13" FontWeight="Normal" Height="30" Width="200" BorderBrush="#777777" BorderThickness="0,0,0.5,0"
                               Content="Kiểm tra khối giao tiếp wifi"/>
                            <Label Padding="10,0,0,0" FontSize="20" FontWeight="Normal" VerticalContentAlignment="Center"
                               Content="{Binding Path=WifiResult, UpdateSourceTrigger=PropertyChanged}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=WifiResult}" Value="-">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=WifiResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=WifiResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=WifiResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                    </Border>

                    <!--Kiểm tra khối giao tiếp sd card-->
                    <Border Height="30" BorderBrush="#777777" BorderThickness="0,0.5,0,0.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCheckSdCard}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsCheckSdCard}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <WrapPanel>
                            <Label Padding="10,5,0,0" FontSize="13" FontWeight="Normal" Height="30" Width="200" BorderBrush="#777777" BorderThickness="0,0,0.5,0"
                               Content="Kiểm tra khối giao tiếp sd card"/>
                            <Label Padding="10,0,0,0" FontSize="20" FontWeight="Normal" VerticalContentAlignment="Center"
                               Content="{Binding Path=sdCardResult, UpdateSourceTrigger=PropertyChanged}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=sdCardResult}" Value="-">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=sdCardResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=sdCardResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=sdCardResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                    </Border>

                    <!--Kiểm tra khối giao tiếp ethernet-->
                    <Border Height="30" BorderBrush="#777777" BorderThickness="0,0.5,0,0.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCheckEthernet}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsCheckEthernet}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <WrapPanel>
                            <Label Padding="10,5,0,0" FontSize="13" FontWeight="Normal" Height="30" Width="200" BorderBrush="#777777" BorderThickness="0,0,0.5,0"
                               Content="Kiểm tra khối giao tiếp ethernet"/>
                            <Label Padding="10,0,0,0" FontSize="20" FontWeight="Normal" VerticalContentAlignment="Center"
                               Content="{Binding Path=ethernetResult, UpdateSourceTrigger=PropertyChanged}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ethernetResult}" Value="-">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ethernetResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ethernetResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ethernetResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                    </Border>

                    <!--Kiểm tra RGB LED-->
                    <Border Height="30" BorderBrush="#777777" BorderThickness="0,0.5,0,0.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCheckRgbLed}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsCheckRgbLed}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <WrapPanel>
                            <Label Padding="10,5,0,0" FontSize="13" FontWeight="Normal" Height="30" Width="200" BorderBrush="#777777" BorderThickness="0,0,0.5,0"
                               Content="Kiểm tra RGB LED"/>
                            <Label Padding="10,0,0,0" FontSize="20" FontWeight="Normal" VerticalContentAlignment="Center"
                               Content="{Binding Path=rgbLedResult, UpdateSourceTrigger=PropertyChanged}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=rgbLedResult}" Value="-">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=rgbLedResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=rgbLedResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=rgbLedResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                    </Border>

                    <!--Kiểm tra nút nhấn-->
                    <Border Height="30" BorderBrush="#777777" BorderThickness="0,0.5,0,0.5">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsCheckButton}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsCheckButton}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <WrapPanel>
                            <Label Padding="10,5,0,0" FontSize="13" FontWeight="Normal" Height="30" Width="200" BorderBrush="#777777" BorderThickness="0,0,0.5,0"
                               Content="Kiểm tra nút nhấn"/>
                            <Label Padding="10,0,0,0" FontSize="20" FontWeight="Normal" VerticalContentAlignment="Center"
                               Content="{Binding Path=buttonResult, UpdateSourceTrigger=PropertyChanged}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=buttonResult}" Value="-">
                                                <Setter Property="Foreground" Value="Black"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=buttonResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=buttonResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=buttonResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </WrapPanel>
                    </Border>



                </StackPanel>
            </ScrollViewer>

        </Border>

    </Grid>

</UserControl>
